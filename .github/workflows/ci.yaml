name: build-and-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      IMAGE: raedbari/node.js
      TAG: ${{ github.sha }}
    permissions:
      contents: read
      packages: write
    outputs:
      image_digest: ${{ steps.build.outputs.digest }}   
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push image (with cache)
        id: build                                   
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_id }}

  deploy_to_kubernetes:
    needs: build_and_push
    runs-on: self-hosted
    env:
      IMAGE: raedbari/node.js
      IMAGE_DIGEST: ${{ needs.build_and_push.outputs.image_digest }}  
      NAMESPACE: project-env
      DEPLOYMENT: project-dep
      CONTAINER: nodejs
    steps:
      - name: Set strict bash flags
        run: set -euo pipefail

      - name: Update Deployment image by digest and rollout
        run: |
         
          kubectl -n "$NAMESPACE" set image deployment/"$DEPLOYMENT" \
            "$CONTAINER"=${IMAGE}@${IMAGE_DIGEST}

         
          kubectl -n "$NAMESPACE" annotate deployment/"$DEPLOYMENT" \
            ci.commit=${GITHUB_SHA} ci.digest=${IMAGE_DIGEST} --overwrite

      
          kubectl -n "$NAMESPACE" rollout status deployment/"$DEPLOYMENT" --timeout=300s

     
          echo -n "Deployed image: "
          kubectl -n "$NAMESPACE" get deploy "$DEPLOYMENT" -o=jsonpath='{.spec.template.spec.conta
